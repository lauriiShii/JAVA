package BoletinFunciones;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Teclado {

	static Scanner teclado = new Scanner(System.in);
	
	/**LECTURA DE UN CARACTER CUALQUIERA**/
	public static char caracter(String mensaje) {
		
		/**VARIABLES**/
		String cadena;
		
		do {
			/**PEDIMOS CARACTER**/
			System.out.println(mensaje);
			cadena = teclado.nextLine();

			//SI NO HA METIDO UN SOLO CARACTER SE INFORMA Y SE VUELVE A PEDIR
			if (cadena.length() != 1)
				System.out.println("!ERROR! No ha introducido un solo caracter");
			
		} while (cadena.length() != 1);
		return cadena.charAt(0); //DEVOLVEMOS EL CARACTER EXTRAYENDOLO DE LA CADENA
	}
	
	/**LECTURA DE UNA CADENA CUALQUIERA**/
	public static String cadena(String mensaje){
		
		/**VARIABLES**/
		String cadena;
		
		/**PEDIMOS CADENA**/
		System.out.println(mensaje);
	    cadena = teclado.nextLine();
	    
	    return cadena; //DEVOLVEMOS LA CADENA
	}
	    
	/**LECTURA DE UN BOOLEAN. SE LE PASARA COMO PARAMETRO EL MENSAJE DE PETICION AL USUARIO, 
	 * UNA CADENA PARA EL TUR Y UNA CADENA PARA EL FALSE**/
	public static boolean booleano (String mensaje, String verdadero, String falso){
		
		/**VARIABLES**/
		String cadena;
		boolean booleano=false;
		
		do{
			/**PEDIMOS LA CADENA**/
			System.out.println(mensaje);
			cadena = teclado.nextLine();
				
			//SI LA CADENA NO COINCIDE CON TRUE O FALSE LA VOLVEMOS A PEDIR
			if (!(cadena.equalsIgnoreCase(falso)||cadena.equalsIgnoreCase(verdadero)))
				System.out.println("Solo puedes introducir "+ verdadero + " o " + falso +" .");
				
		}while (!(cadena.equalsIgnoreCase(falso)||cadena.equalsIgnoreCase(verdadero)));
		
		/**PASAMOS LA CADENA A BOOLEAN**/
		if (cadena.equalsIgnoreCase(verdadero))
			booleano = true;
		else 
			booleano = false; 
		
		return booleano; //DEVOLVEMOS EL VALOR BOOLEANO	
	}
			
	/**LECTURA DE UN NUMERO CUALQUIERA**/
	//BYTE
	public static byte  numeroByte (String mensaje){
		
		/**VARIABLES**/
		byte numero=0;
		boolean bucle=true;

		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextByte();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO BYTE
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);	
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//SHORT
	public static short  numeroShort (String mensaje){
		
		/**VARIABLES**/
		short numero=0;
		boolean bucle=true;
		
		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextShort();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO SHORT
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//INT
	public static int  numeroInt (String mensaje){
		
		/**VARIABLES**/
		int numero=0;
		boolean bucle=true;
		
		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextInt();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO INT
			}catch(InputMismatchException e){
				System.out.println("¡CARACER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//LONG
	public static long numeroLong (String mensaje){
		
		/**VARIABLES**/
		long numero=0;
		boolean bucle=true;
		
		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextLong();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO LONG
			}catch(InputMismatchException e){
				System.out.println("¡CARACER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//FLOAT
	public static float  numeroFloat (String mensaje){
		
		/**VARIABLES**/
		float numero=0;
		boolean bucle=true;
		
		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextShort();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO FLOAT
			}catch(InputMismatchException e){
				System.out.println("¡CARACER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//DOUBLE
	public static double  numeroDouble (String mensaje){
		
		/**VARIABLES**/
		double numero=0;
		boolean bucle=true;
		
		do {

			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextDouble();
				bucle=false;
			
			//CONTROLAMOS QUE INTRODUZCA UN NUMERO DOUBLE
			}catch(InputMismatchException e){
				System.out.println("¡CARACER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	/**LECTURA DE UN NUMERO QUE SE COMPARE CON UN VALOR MINIMO/MAXIMO PASADO COMO PARAMETRO.
	 *  AÑADIR UN PARAMETRO MAS PARA INDICAR**/
	//BYTE
	public static byte numeroByte(String mensaje, int maximini, maximini opcion){
		byte numero=0;
		boolean bucle=true;

		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextByte();				

				switch(opcion){
				
				case MAYOR_IGUAL_MIN: //mayor igual que un valor min
					if (numero < maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case MENOR_IGUAL_MAX: //menor o igual que un valor max
					if (numero > maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case MAYOR_MIN: //mayor que un valor min
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case MENOR_MAX: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO BYTE
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//SHORT
	public static short numeroShort(String mensaje, int maximini, int opcion){
		short numero=0;
		boolean bucle=true;
		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextShort();

				switch(opcion){
				
				case 0: //mayor igual que un valor min
					if (numero<maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 1: //menor o igual que un valor max
					if (numero>maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 2: //mayor que un valor max
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case 3: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO SHORT
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				bucle=true;
			}
		} while (bucle);
		teclado.nextLine(); //LIMPIAMOS EL BUFFERT
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//INT
	public static int numeroInt(String mensaje, int maximini, int opcion){
		int numero=0;
		boolean bucle=true;
		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextInt();

				switch(opcion){
				
				case 0: //mayor igual que un valor min
					if (numero<maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 1: //menor o igual que un valor max
					if (numero>maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 2: //mayor que un valor max
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case 3: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO INT
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				bucle=true;
			}
		} while (bucle);
		teclado.nextLine(); //LIMPIAMOS EL BUFFERT
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//LONG
	public static long numeroLong (String mensaje, int maximini, int opcion){
		long numero=0;
		boolean bucle=true;
		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextLong();

				switch(opcion){
				
				case 0: //mayor igual que un valor min
					if (numero<maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 1: //menor o igual que un valor max
					if (numero>maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 2: //mayor que un valor max
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case 3: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO LONG
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//FLOAT
	public static float numerofloat (String mensaje, int maximini, int opcion){
		float numero=0;
		boolean bucle=true;
		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextFloat();

				switch(opcion){
				
				case 0: //mayor igual que un valor min
					if (numero<maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 1: //menor o igual que un valor max
					if (numero>maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 2: //mayor que un valor max
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case 3: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO FLOAT
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//DOUBLE
	public static double numeroDouble (String mensaje, int maximini, int opcion){
		double numero=0;
		boolean bucle=true;
		
		do {
			try{
				/**PEDIMOS NUMERO**/
				System.out.println(mensaje);
				numero=teclado.nextDouble();

				switch(opcion){
				
				case 0: //mayor igual que un valor min
					if (numero<maximini){
						System.out.println("¡ERROR! Numero debe ser mayor o igual que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 1: //menor o igual que un valor max
					if (numero>maximini){
						System.out.println("¡ERROR! Numero debe ser menor o igual que"+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
					
				case 2: //mayor que un valor max
					if (numero<=maximini){
						System.out.println("¡ERROR! Numero debe ser mayor que "+maximini+".");
						bucle=true;
					} else bucle=false;
					break;
				
				case 3: //menor que un valor min
					if (numero>=maximini){
						System.out.println("¡ERROR! Numero debe ser menor que "+maximini+". ");
						bucle=true;
					} else bucle=false;
					break;
				}
			
				//CONTROLAMOS QUE INTRODUZCA UN NUMERO DOUBLE
			}catch(InputMismatchException e){
				System.out.println("¡CARACTER NO RECONOCIDO!");
				teclado.nextLine(); //LIMPIAMOS EL BUFFERT
				bucle=true;
			}
		} while (bucle);
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	/**LECTURA DE UN NUMERO QUE DEBE ESTAR ENTRE UN VALOR MINIMO Y UN VALOR MAXIMO ADMISIBLES, 
	 * QUE SE LE PASARAN COMO PARAMETROS. EL VALOR MINIMO Y EL VALOR MAXIMO PUEDEN SER IGUALES. 
	 * AÑADIR UN PARAMETRO MAS PARA INDICAR**/
	//BYTE
	public static byte numeroByte (String mensaje, int min, int max, maximini opcion){
		
		/**VARIABLES**/
		byte numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextByte();
					
					switch(opcion){
					case INCLIDO_MIN_MAX: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case EXCLUIDO_MIN_MAX: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case MIN_INCLUIDO_MAX_EXCLUIDO: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case MIN_EXCLUIDO_MAX_INCLUIDO: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO BYTE
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//SHORT
	public static short numeroShort (String mensaje, int min, int max, int opcion){
		
		/**VARIABLES**/
		short numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextShort();
					
					switch(opcion){
					case 0: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 1: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 2: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case 3: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO SHORT
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//INT
	public static int numeroInt (String mensaje, int min, int max, int opcion){
		
		/**VARIABLES**/
		int numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextInt();
					
					switch(opcion){
					case 0: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 1: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 2: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case 3: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO INT
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//LONG
	public static long numeroLong (String mensaje, int min, int max, int opcion){
		
		/**VARIABLES**/
		long numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextLong();
					
					switch(opcion){
					case 0: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 1: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 2: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case 3: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO LONG
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//FLOAT
	public static float numeroFloat (String mensaje, int min, int max, int opcion){
		
		/**VARIABLES**/
		float numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextFloat();
					
					switch(opcion){
					case 0: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 1: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 2: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case 3: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO FLOAT
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	//DOUBLE
	public static double numeroDouble (String mensaje, int min, int max, int opcion){
		
		/**VARIABLES**/
		double numero=0;
		boolean bucle=true;
			
		//CONTROLAMOS QUE EL MIN NO SEA MAYOR O IGUAL QUE EL MAX
		if (min>=max) throw new IllegalArgumentException("¡EL MINIMO DEBE SER MENOR QUE EL MAXIMO!.");
		else{
			do {
				
				try{
					/**PEDIMOS NUMERO**/
					System.out.println(mensaje);
					numero=teclado.nextDouble();
					
					switch(opcion){
					case 0: //min y max incluidos
						if ( !(numero>=min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos incluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 1: //min y max excluidos
						if ( !(numero>min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" y "+max+" (Ambos excluidos). ");
							bucle=true;
						} else bucle=false;
						break;
					case 2: //min incluido y max exclido
						if ( !(numero>=min && numero<max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+min+" (incluido) y "+(max)+" (excluido). ");
							bucle=true;
						} else bucle=false;
						break;
					case 3: //min excluido y max incluido
						if ( !(numero>min && numero<=max) ){
							System.out.println("¡ERROR! El numero debe estar entre "+(min)+" (excluido)  y "+max+" (incluido). ");
							bucle=true;
						} else bucle=false;
						break;
					}
					
					//CONTROLAMOS QUE INTRODUZCA UN NUMERO DOUBLE
				}catch(InputMismatchException e){
					System.out.println("CARACER NO RECONOCIDO");
					teclado.nextLine();//LIMPIAMOS EL BUFFERT
					bucle=true;
				}
			} while (bucle);
		}
		return numero; //DEVOLVEMOS EL NUMERO
	}
	
	public static void cerrarTeclado(){
		teclado.close();
	}
	
}